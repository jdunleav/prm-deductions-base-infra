
# Get details of the Transit VPC the Test VPC will have a peering connection with
# data "aws_vpc" "opentest_vpc" {
#   id = var.opentest_vpc_id
# }

# VPC peering connection
resource "aws_vpc_peering_connection" "transit_peering_connection" {
  peer_vpc_id = local.transit_vpc_id
  vpc_id = aws_vpc.main-vpc.id
  auto_accept = true

  accepter {
    allow_remote_vpc_dns_resolution = true
  }

  requester {
    allow_remote_vpc_dns_resolution = true
  }

  tags = {
    Name = "${var.component_name}-test-peering-connection"
  }
}

# Add a route to the Transit VPC in the Test VPC route table
resource "aws_route" "test_to_transit_route" {
  route_table_id = local.test_vpc_route_table_id
  destination_cidr_block = "10.10.0.0/16"
  vpc_peering_connection_id = aws_vpc_peering_connection.transit_peering_connection.id
}

# Add a route to the Test VPC in the Transit VPC route table
resource "aws_route" "opentest_to_mhs_route" {
  route_table_id = data.aws_ssm_parameter.transit-private-subnet-rtb-id.value #rtb-0920058394d31380c" #TODO: from SSM, the route table where VPN client is.
  destination_cidr_block = var.cidr
  vpc_peering_connection_id = aws_vpc_peering_connection.transit_peering_connection.id
}

# Add a route to the OpenTest network in the Test VPC route table
# resource "aws_route" "test_to_opentest_route" {
#   route_table_id = local.test_vpc_route_table_id
#   destination_cidr_block = "${var.opentest_cidr}"
#   instance_id = "i-0a34c8d1bec397fab"
#   vpc_peering_connection_id = aws_vpc_peering_connection.transit_peering_connection.id
# }

# # Add a route to the Test VPC in the Transit VPC route table
# resource "aws_route" "opentest_to_mhs_route" {
#   route_table_id = data.aws_vpc.opentest_vpc.main_route_table_id
#   destination_cidr_block = aws_vpc.mhs_vpc.cidr_block
#   vpc_peering_connection_id = aws_vpc_peering_connection.transit_peering_connection.id
# }
#
# # Allow DNS resolution of the domain names defined in route53.tf in the Transit VPC
# resource "aws_route53_zone_association" "opentest_hosted_zone_mhs_vpc_association" {
#   zone_id = aws_route53_zone.mhs_hosted_zone.zone_id
#   vpc_id = data.aws_vpc.opentest_vpc.id
# }
